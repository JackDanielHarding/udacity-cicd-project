version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3     
            
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: 
          name: Install dependencies
          working_directory: ./frontend
          command: npm i
      - run:
          name: Build front-end
          command: npm run build
          working_directory: ./frontend
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: 
          name: Install dependencies
          working_directory: ./backend
          command: npm i
      - run:
          name: Back-end build
          command: npm run build
          working_directory: ./backend
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: 
          name: Run frontend tests
          working_directory: ./frontend
          command: npm run test
                
  test-backend:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: 
          name: Run backend tests
          working_directory: ./backend
          command: npm run test
            
  scan-frontend:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: 
          name: Analyse frontend
          working_directory: ./frontend
          command: npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: 
          name: Analyse backend
          working_directory: ./backend
          command: npm audit --audit-level=none # I had to remove the --audit-level=critical flag because when running the npm audit fix --audit-level=critical --force from the instructions, it introduces a breaking change to one of the dependencies

  deploy-infrastructure:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          profile-name: admin
      - checkout
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=udacity-cicd-project \
              --stack-name udacity-cicd-backend-$CIRCLE_WORKFLOW_ID \
              --parameter-overrides ID=$CIRCLE_WORKFLOW_ID
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=udacity-cicd-project \
              --stack-name udacity-cicd-frontend-$CIRCLE_WORKFLOW_ID \
              --parameter-overrides ID=$CIRCLE_WORKFLOW_ID
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:project,Values=udacity-cicd-project" \
              --output text >> .circleci/ansible/inventory.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
      # Here's where you will add some code to rollback on failure  

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - deploy-infrastructure:
          requires: [test-frontend, test-backend, scan-frontend, scan-backend]
          filters:
            branches:
              only: 
                - main